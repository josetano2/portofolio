---
import { Image } from "astro:assets";
import type { IProject, IStack } from "../../lib/models/model";
import { animatePageOut } from "@/lib/animation/animation";

interface Props {
  id: string;
  name: string;
  description: string;
  stacks: IStack[];
  thumbnail: ImageMetadata;
}

const { id, name, description, stacks, thumbnail } = Astro.props;
---

<div
  class="w-full h-fit gap-2 font-mono cursor-pointer border-2 border-black p-3 bg-white group card-parent"
  data-cursor-text={name}
  data-name={name}
>
  <div class="w-full h-72 overflow-hidden relative">
    <div
      class="w-screen h-full bg-black absolute z-20 opacity-0 xl:opacity-10 2xl:opacity-10 group-hover:opacity-0 transition-opacity ease-in"
    >
    </div>
    <Image
      class="object-cover	object-top w-full h-full transition-transform ease-in duration-[0.15s] scale-[1] group-hover:scale-[1.05]"
      src={thumbnail}
      alt="tes"
      densities={[1.5, 2]}
    />
  </div>
  <div class="pt-6">
    <div class="flex items-center justify-between w-full">
      <p class="text-xl 2xl:text-2xl font-bold">{name}</p>
      <div class="flex gap-3">
        {
          stacks.map((s) => {
            return <s.icon size={21} />;
          })
        }
      </div>
    </div>
    <p class="text-base 2xl:text-lg">{description}</p>
  </div>
</div>

<script>
  import { animatePageOut } from "@/lib/animation/animation";

  document.addEventListener("DOMContentLoaded", () => {
    const cards = document.querySelectorAll(
      ".card-parent"
    ) as NodeListOf<HTMLElement>;
    cards.forEach((card) => {
      const name = card.dataset.name;
      card.addEventListener("click", () => animatePageOut("/projects/" + name));
    });
  });
</script>
